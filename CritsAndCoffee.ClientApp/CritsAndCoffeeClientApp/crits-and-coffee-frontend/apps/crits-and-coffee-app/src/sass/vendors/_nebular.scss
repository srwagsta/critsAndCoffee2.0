@import '../abstracts/variables';
// import Nebular Theme System and the default theme
@import '~@nebular/theme/styles/theming';
@import '~@nebular/theme/styles/themes/cosmic';
@import '~@nebular/auth/styles/themes/cosmic';


$nb-themes: nb-register-theme((
  font-main: $text-font-stack,
  color-bg: $dark-grey,
  shadow: 0 1px 2px 0 #000000,
  color-fg: $base-grey,
  layout-bg: #ededed,
  color-fg-text: $text-color,
  color-primary: $brand-primary-color
), dark, cosmic);

$nb-enabled-themes: (dark);

// SEE --> https://akveo.github.io/nebular/docs/guides/change-theme#runtime-theme-switch

//2) Now, to enable the magic of the hot reload, wrap all of your *.component.scss styles with the nb-install-component mixin like this:
//
  //@import '../../../@theme/styles/themes';
  //
  //@include nb-install-component() {
  //  background: nb-theme(card-bg); // now, for each theme registered the corresponding value will be inserted
  //
  //  .container {
  //    background: nb-theme(color-bg);
  //    font-weight: nb-theme(font-weight-bold);
  //  }
  //}
//NOTE
//The install-component mixin 'covers' the :host declaration inside of it, meaning that you don't need to specify :host manually inside of @include nb-install-component() { and styles written right inside of the mixing will be applied to the host.
//Done, now you can change a theme in the runtime. Here's how you can do it from a component:
  //// include the theme service
  //constructor(private themeService: NbThemeService) {
  //}
  //
  //// change to dark
  //enableDarkTheme() {
  //this.themeService.changeTheme('dark');
  //}
